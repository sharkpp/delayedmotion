{"version":3,"sources":["serviceWorker.js","misc/constants.js","views/UploadImage.js","views/SelectArea.js","views/DownloadImage.js","components/SimplePopup.js","components/PrivacyPolicy.js","App.js","models/Network.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ImageSourceType","Step","UploadImage","SelectArea","DownloadImage","models","onNextStep","network","useState","isOnline","online","setOnline","imageSrcType","setImageSrcType","imageUrl","setImageUrl","invalidImageUrl","setInvalidImageUrl","loadingImageUrl","setLoadingImageUrl","useEffect","handleNetworkChange","on","EventType","Change","off","useDropzone","accept","onDrop","files","reader","FileReader","onload","image","Image","src","result","readAsDataURL","disabled","rejectedFiles","getRootProps","getInputProps","rejectedFilesItems","map","file","key","path","handleSelectedImageUrl","useCallback","crossOrigin","err","onerror","Card","Header","role","Nav","variant","aria-label","activeKey","onSelect","k","Item","Link","id","aria-controls","eventKey","Body","aria-hidden","data-aria-labelledby","className","icon","faFileUpload","size","aria-labelledby","InputGroup","FormControl","placeholder","value","onChange","e","target","isInvalid","readOnly","Append","Button","onClick","Spinner","as","animation","Form","Control","Feedback","type","Alert","createRef","canvasRef","canvasMaskRef","canvasOffscreenRef","crop","setCrop","canvas","current","width","height","getContext","drawImage","canvasOffscreen","handleChangeArea","newCrop","Object","assign","Math","floor","ctx","scale","clientWidth","ctxOffscreen","xiMax","yiMax","canvasMask","ctxMask","fillStyle","fillRect","beginPath","ellipse","PI","fill","maskData","getImageData","data","xyStep","xOffset","x","yOffset","y","yi","xi","random","handleAreaLock","toBlob","imageBlob","cropValid","Text","Group","renderComponent","ref","style","onComplete","display","FileDownload","require","prevewImage","setPrevewImage","handleDownload","handleNext","Row","Col","alt","left","top","open","caption","title","onClose","children","Title","MatchLink","MatchSection","split","line","lineIndex","test","lineFormatted","replace","token","tokenIndex","m","exec","rel","href","faExternalLinkAlt","Steps","App","step","setStep","setImage","image2","setImage2","showPrivacyPolicy","setShowPrivacyPolicy","steps","activeStep","selectedImage","generatedImage","faUserShield","faTwitter","faBug","EventEmitter","NetworkModel","this","_ev","_handleNetworkChange","bind","addEventListener","emit","name","listener","removeListener","onLine","prototype","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.14769790.chunk.js","sourcesContent":["\"use struct\";\n\n// このオプションのコードは、Service Workerを登録するために使用されます。\n// register() はデフォルトでは呼び出されません。\n\n// これにより、その後の実稼働時のアクセスでアプリの読み込みが速くなり、\n// オフライン機能が提供されます。 ただし、開発者（およびユーザー）は、\n// 以前にキャッシュされたリソースがバックグラウンドで更新されるため、\n// ページで開いている既存のタブがすべて閉じられた後、ページへの以降の\n// アクセスでのみ展開された更新が表示されます。\n\n// このモデルの利点とオプトイン方法の詳細については、\n// https://bit.ly/CRA-PWA をご覧ください。\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] は IPv6 localhost アドレスです。\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 は IPv4 のローカルホストと見なされます。\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // URLコンストラクターは、SWをサポートするすべてのブラウザーで使用できます。\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // PUBLIC_URL がページの配信元と異なる発信元にある場合サービスワーカーは機能しません。\n      // これは、アセットの提供にCDNが使用されている場合に発生する可能性があります。\n      // https://github.com/facebook/create-react-app/issues/2374 を参照してください\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // これはローカルホストで実行されています。 Service Workerがまだ存在するかどうかを確認しましょう。\n        checkValidServiceWorker(swUrl, config);\n\n        // いくつかの追加のログを localhost に追加し、開発者に\n        // service worker/PWA ドキュメントを参照させます。\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // ローカルホストではありません。サービスワーカーを登録するだけです。\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // この時点で更新された事前キャッシュされたコンテンツが取得されましたが、\n              // 以前のサービスワーカーは、すべてのクライアントタブが閉じられるまで\n              // 古いコンテンツを引き続き提供します。\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // コールバックを実行\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // この時点ですべてが事前にキャッシュされています。\n              // \"コンテンツはオフラインで使用するためにキャッシュされます。\"\n              // メッセージを表示するのに最適なタイミングです。\n              console.log('Content is cached for offline use.');\n\n              // コールバックを実行\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // ページをリロードできない場合、サービスワーカーが見つかるかどうかを確認します。\n  fetch(swUrl)\n    .then(response => {\n      // Service Worker が存在し、JSファイルを実際に取得していることを確認してください。\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // サービスワーカーが見つかりません。おそらく別のアプリ。ページをリロード。\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // サービスワーカーが見つかりました。通常どおり続行。\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\"use struct\";\n\n// 画像の元の場所\nexport const ImageSourceType = {\n  FromLocal: 0,\n  FromUrl:   1,\n};\n\n// 処理のステップの状態\nexport const Step = {\n  UploadImage:   0,\n  SelectArea:    1,\n  DownloadImage: 2,\n};\n","\"use struct\";\n\nimport React, { useState, useCallback, useEffect } from 'react';\n\nimport { Nav, Card, Form, FormControl, InputGroup, Button, Spinner, Alert } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\n\nimport {useDropzone} from 'react-dropzone'\nimport 'react-dropzone/examples/theme.css';\n\nimport { ImageSourceType } from '../misc/constants';\n\nimport './UploadImage.css';\n\nexport default function ({ models, onNextStep }) {\n  const { network } = models;\n\n  const [ online, setOnline ] = useState(network.isOnline());\n  const [ imageSrcType, setImageSrcType ] = useState(ImageSourceType.FromLocal);\n  const [ imageUrl, setImageUrl ] = useState('');\n  const [ invalidImageUrl, setInvalidImageUrl ] = useState(false);\n  const [ loadingImageUrl, setLoadingImageUrl ] = useState(false);\n\n  useEffect(() => {\n    const handleNetworkChange = (isOnline) => {\n      //console.log('handleNetworkChange',isOnline);\n      setOnline(isOnline);\n    };\n    network.on(network.EventType.Change, handleNetworkChange);\n    return () => {\n      network.off(network.EventType.Change, handleNetworkChange);\n    };\n  }, [network, imageSrcType]);\n\n  const handleDrop = (files) => {\n    if (files[0]) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const image = new Image();\n        image.src = reader.result;\n        image.onload = () => {\n          onNextStep(image);\n        }\n      }\n      reader.readAsDataURL(files[0]);\n    }\n  };\n\n  const {\n    rejectedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg, image/png',\n    onDrop: handleDrop,\n    disabled: loadingImageUrl,\n  });\n\n  const rejectedFilesItems = rejectedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} は利用できません。\n    </li>\n  ));\n\n  const handleSelectImageUrl = (e) => {\n    setInvalidImageUrl(false);\n    setImageUrl(e.target.value);\n  };\n  const handleSelectedImageUrl = useCallback(() => {\n    setLoadingImageUrl(true);\n    setInvalidImageUrl(false);\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n    image.src = 'https://api-gw98.herokuapp.com/' + imageUrl;\n    image.onload = (err) => {\n      setLoadingImageUrl(false);\n      onNextStep(image);\n    }\n    image.onerror = (err) => {\n      setLoadingImageUrl(false);\n      setInvalidImageUrl(true);\n    }\n  }, [onNextStep, imageUrl]);\n\n  return (\n    <>\n      <Card.Header\n        role=\"tablist\" // なぜか Nav に role がつかないので\n      >\n        <Nav variant=\"tabs\" aria-label=\"image-source\" activeKey={imageSrcType} onSelect={k => setImageSrcType(k)}>\n          <Nav.Item>\n            <Nav.Link id=\"tab-img-from-file\" aria-controls=\"tab-panel\" eventKey={ImageSourceType.FromLocal}>アップロード</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link id=\"tab-img-from-url\" aria-controls=\"tab-panel\" eventKey={ImageSourceType.FromUrl}>URLを指定</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Card.Header>\n\n      {ImageSourceType.FromLocal === +imageSrcType && <Card.Body id=\"tab-panel\" role=\"tabpanel\" aria-hidden=\"false\" data-aria-labelledby=\"tab-img-from-file\">\n        <div {...getRootProps({className: 'dropzone'+(loadingImageUrl?' disabled':'')})}>\n          <input {...getInputProps()} />\n          <FontAwesomeIcon icon={faFileUpload} size=\"4x\" />\n          <p>画像をここにドロップするか、クリックして選択してください</p>\n          <em>jpeg もしくは png のみ指定可能)</em>\n        </div>\n        <ol>\n          {rejectedFilesItems}\n        </ol>\n      </Card.Body>}\n\n      {ImageSourceType.FromUrl === +imageSrcType && <Card.Body id=\"tab-panel\" role=\"tabpanel\" aria-hidden=\"false\" aria-labelledby=\"tab-img-from-url\">\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"画像のURL\"\n            value={imageUrl}\n            onChange={handleSelectImageUrl}\n            isInvalid={invalidImageUrl}\n            readOnly={!online || loadingImageUrl}\n          />\n          <InputGroup.Append>\n            <Button \n              role=\"image-select-apply\"\n              variant={online ? \"outline-primary\" : \"outline-secondary\"}\n              onClick={handleSelectedImageUrl}\n              disabled={!online || !imageUrl || loadingImageUrl}\n            >\n              {loadingImageUrl && <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"image-loading-status\"\n                aria-hidden=\"true\"\n                className=\"btn-inner-spinner\"\n              />}\n              画像を選択\n            </Button>\n          </InputGroup.Append>\n          <Form.Control.Feedback type=\"invalid\">\n            指定したURLは画像として利用できませんでした\n          </Form.Control.Feedback>\n        </InputGroup>\n        {!online && <Alert variant='warning'>\n          現在、インターネットへ接続されていないためURLを指定しての画像の読み込み機能は利用できません。\n        </Alert>}\n      </Card.Body>}\n    </>\n  );\n}\n","\"use struct\";\n\nimport React, { useState, useEffect, useCallback, createRef } from 'react';\nimport { Button, Card, Form, Alert } from 'react-bootstrap';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './SelectArea.css';\n\nconst BlockSize = 5;\n\nexport default function ({ onNextStep, image }) {\n\n  const [ canvasRef ] = useState(createRef());\n  const [ canvasMaskRef ] = useState(createRef());\n  const [ canvasOffscreenRef ] = useState(createRef());\n  const [crop, setCrop] = useState({ });\n\n  useEffect(() => {\n\n    // 画像を描画\n    const canvas = canvasRef.current;\n    canvas.width = image.width;\n    canvas.height= image.height;\n    const ctx    = canvas.getContext('2d');\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n    const canvasOffscreen = canvasOffscreenRef.current;\n    canvasOffscreen.width = image.width;\n    canvasOffscreen.height= image.height;\n\n  }, [image, canvasRef, canvasOffscreenRef]);\n\n  // 範囲変更\n  const handleChangeArea = useCallback(() => {\n    const newCrop = Object.assign({}, crop, {\n      // 領域を丸める\n      width:  Math.floor(crop.width  / BlockSize) * BlockSize + 1,\n      height: Math.floor(crop.height / BlockSize) * BlockSize + 1,\n    });\n\n    const canvas = canvasRef.current;\n    const ctx    = canvas.getContext('2d');\n    const scale  = image.width / canvas.clientWidth;\n\n    const canvasOffscreen = canvasOffscreenRef.current;\n    const ctxOffscreen    = canvasOffscreen.getContext('2d');\n    ctxOffscreen.drawImage(image, 0, 0, image.width, image.height);\n\n    const xiMax = Math.floor(newCrop.width  / BlockSize);\n    const yiMax = Math.floor(newCrop.height / BlockSize);\n    const canvasMask = canvasMaskRef.current;\n    canvasMask.width = xiMax;\n    canvasMask.height= yiMax;\n    const ctxMask    = canvasMask.getContext('2d');\n\n    if (canvasMask.width < 1 || canvasMask.height < 1) {\n      ctx.drawImage(canvasOffscreen, 0, 0);\n      return;\n    }\n\n    ctxMask.fillStyle = '#000000';\n    ctxMask.fillRect(0, 0, canvasMask.width, canvasMask.height);\n    ctxMask.fillStyle = '#FF0000';\n    ctxMask.beginPath();\n    ctxMask.ellipse(canvasMask.width / 2, canvasMask.height / 2, canvasMask.width / 2 * 0.9, canvasMask.height / 2 * 0.9, 0, 0, 2 * Math.PI);\n    ctxMask.fill();\n    const maskData = ctxMask.getImageData(0, 0, canvasMask.width, canvasMask.height).data; // [ R(0,0), G(0,0), B(0,0), alpha(0,0), ... ]\n\n    const xyStep  = 5 * scale;\n    const xOffset = newCrop.x * scale;\n    const yOffset = newCrop.y * scale;\n\n    ctxOffscreen.fillStyle = 'rgb(0,0,0,0.5)';\n    ctxOffscreen.fillRect(newCrop.x * scale, newCrop.y * scale,\n                          Math.floor((newCrop.width  + 1) / BlockSize) * xyStep,\n                          Math.floor((newCrop.height + 1) / BlockSize) * xyStep);\n\n    for (let y = yOffset, yi = 0; yi < yiMax; y += xyStep, ++yi) {\n      for (let x = xOffset, xi = 0; xi < xiMax; x += xyStep, ++xi) {\n        if (0 === maskData[(xi + yi * xiMax) * 4 + 0] && Math.random() < 0.3) {\n          ctxOffscreen.fillStyle = '#FFFFFF';\n          ctxOffscreen.fillRect(x, y, xyStep + scale, xyStep + scale);\n        }\n      }\n    }\n\n    ctx.drawImage(canvasOffscreen, 0, 0);\n\n    setCrop(newCrop);\n  }, [image, canvasRef, canvasOffscreenRef, canvasMaskRef, crop]);\n\n  // 範囲確定\n  const handleAreaLock = useCallback(() => {\n    const canvas = canvasRef.current;\n    canvas.toBlob((imageBlob) => {\n      onNextStep(imageBlob);\n    }, 'image/jpeg', 0.9);\n  }, [canvasRef, onNextStep]);\n  \n  const cropValid = crop.width && crop.height;\n\n  return (\n    <Card.Body>\n      <Card.Text>\n        <Form.Group>\n          {!!cropValid&&<Button onClick={handleAreaLock} >\n            選択完了\n          </Button>}\n          {!cropValid&&<Alert variant='info'>\n            揺らす範囲を選択してください\n          </Alert>}\n        </Form.Group>\n        <ReactCrop\n          renderComponent={\n            <canvas ref={canvasRef} style={{ width: '100%' }} />\n          }\n          crop={crop}\n          onChange={newCrop => setCrop(newCrop)}\n          onComplete={() => handleChangeArea()}\n        />\n      </Card.Text>\n      <canvas ref={canvasOffscreenRef} style={{ width: '100%', display: 'none' }} />\n      <canvas ref={canvasMaskRef} style={{ display: 'none' }} />\n    </Card.Body>\n  );\n}\n","\"use struct\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Card, Form, Col } from 'react-bootstrap';\nimport './DownloadImage.css';\nconst FileDownload = require('js-file-download');\n\nexport default function ({ image, onNextStep }) {\n\n  const [ prevewImage, setPrevewImage ] = useState('');\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setPrevewImage(e.target.result);\n    };\n    reader.readAsDataURL(image);\n  }, [image]);\n\n  const handleDownload = useCallback(() => {\n    FileDownload(image, 'sample.jpg', 'image/jpeg');\n  }, [image]);\n\n  const handleNext = useCallback(() => {\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <Card.Body>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Button onClick={handleDownload} >\n            ダウンロード\n          </Button>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Button variant=\"link\" onClick={handleNext} >\n            新規作成\n          </Button>\n        </Form.Group>\n      </Form.Row>\n      <div className=\"image-preview\">\n        <img src={prevewImage} className=\"layout\" alt=\"layout\" />\n        <img src={prevewImage} className=\"main\"   alt=\"生成画像\" style={{ left: 0, top: 0 }} />\n      </div>\n    </Card.Body>\n  );\n}\n","\"use struct\";\n\nimport React from 'react';\n\nimport { Card, Button } from 'react-bootstrap';\n\nimport './SimplePopup.css';\n\nexport default function ({ open, caption, title, onClose, children }) {\n\n  return (\n    <div className={`simple-popup ${open?'open':'close'}`} >\n      <div className='background' />\n      <div>\n        <Card>\n          {!!caption&&<Card.Header>{caption}</Card.Header>}\n          <Card.Body>\n            {!!title&&<Card.Title>{title}</Card.Title>}\n            <div className=\"card-text\" style={{\n                  'height': `calc(100% - 1rem${!!title?' - 2rem':''} - 2.5rem)`\n            }}>\n              {children}\n            </div>{/* Card.Text だと p 要素になって警告が出る場合があるので */}\n            <Button variant=\"primary\" onClick={() => {onClose&&onClose()}}>閉じる</Button>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","\"use struct\";\n\nimport React from 'react';\n\nimport { Button } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport './PrivacyPolicy.css';\n\nconst PrivacyPolicyText = `\n１．基本的考え方\n揺れる※※画像ジェネレータ（以下「当サイト」という。）において、提供するサービス（当サイトによる情報提供、各種意見の受付等）の円滑な運営に必要な範囲で、当サイトを利用される皆様の情報を収集しています。収集した情報は利用目的の範囲内で適切に取り扱います。\n\n２．収集する情報の範囲\n（１） 当サイトでは、インターネットドメイン名、ＩＰアドレス、当サイトの閲覧等の情報（以下「利用者の情報」という。）を自動的に収集します。なお、クッキー（サーバ側で利用者を識別するために、サーバから利用者のブラウザに送信され、利用者のコンピュータに蓄積される情報）は、ユーザビリティーの向上を目的とする内容に限定するものであり、個人情報は一切含みません。また、利用者のブラウザの設定によりクッキーの機能を無効にすることもできます。\n\n３．利用目的\n（１） ２．（１）において収集した情報は、当サイトが提供するサービスを円滑に運営するための参考として利用します。\n\n（２） 当サイトでは、サイトの利用状況を把握するために[Google Analytics](https://developers.google.com/analytics/?hl=ja)を利用しています。Google Analytics は、クッキーを利用して利用者の情報を収集します。[Google Analytics 利用規約は、こちら](https://www.google.com/analytics/terms/jp.html)をご覧ください。\n\n４．利用及び提供の制限\n当サイトでは、法令に基づく開示請求があった場合、不正アクセス、脅迫等の違法行為があった場合その他特別の理由のある場合を除き、収集した情報を「３．利用目的」以外の目的のために自ら利用し、又は第三者に提供いたしません。ただし、統計的に処理された当サイトのアクセス情報、利用者属性等の情報については公表することがあります。\n\n５．安全確保の措置\n（１） 当サイトは、収集した情報の漏えい、滅失又はき損の防止その他収集した情報の適切な管理のために必要な措置を講じます。 \n\n（２） Google Analyticsにより収集された利用者の情報は、Google社のプライバシーポリシーに基づいて管理されます。[Google社のプライバシーポリシーは、こちら](http://www.google.com/intl/ja/policies/privacy/)をご覧下さい。なお、Google Analyticsのサービス利用による損害については、[@sharkpp](https://twitter.com/sharkpp)は責任を負わないものとします。\n\n６．自己に関する情報の開示\n当サイトにおいては、氏名、生年月日その他一般的に個人を識別できる情報を収集しておりません。\n\n７．適用範囲\n本方針は、当サイトにおいてのみ適用され、当サイトにリンクされています外部サイトについては適用されません。\n\n８．その他\n当サイトは、本方針を改定することがあります。改定する場合は、当サイトでお知らせします。\n\n当サイトの利用に関するお問い合わせは、[@sharkpp](https://twitter.com/sharkpp)までお願いします。\n`;\n\nconst MatchLink = /(\\[(.+?)\\]\\((.+?)\\))/g;\nconst MatchSection = /^[０-９]/;\n\nexport default function () {\n\n  return (\n    <div className=\"privacy-policy\">\n{\n  PrivacyPolicyText.split(\"\\n\").map((line, lineIndex) => {\n    if (MatchSection.test(line)) {\n      return <h2 key={`L${lineIndex}`}>{line}</h2>;\n    }\n    const lineFormatted = line.replace(MatchLink, \"\\x7F$1\\x7F\").split(\"\\x7F\").map((token, tokenIndex) => {\n      const m = MatchLink.exec(token);\n      if (m) {\n        return (\n          <Button key={`link${tokenIndex}`} variant=\"link\" target=\"_blank\" rel=\"noopener\" href={m[3]}>\n            {m[2]} <FontAwesomeIcon icon={faExternalLinkAlt} />\n          </Button>\n        );\n      }\n      return token;\n    });\n    return <p key={`L${lineIndex}`}>{lineFormatted}</p>;\n  })\n}\n    </div>\n  );\n}\n","\"use struct\";\n\nimport React, { useState } from 'react';\n\nimport './App.css';\n\nimport { Card, Button } from 'react-bootstrap'\n\nimport Stepper from 'react-stepper-horizontal';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBug, faUserShield } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nimport UploadImageView from './views/UploadImage';\nimport SelectAreaView from './views/SelectArea';\nimport DownloadImageView from './views/DownloadImage';\n\nimport SimplePopup from './components/SimplePopup';\nimport PrivacyPolicy from './components/PrivacyPolicy';\n\nimport { Step } from './misc/constants';\n\nconst Steps = [\n  { title: '画像をアップロード' },\n  { title: '揺らす範囲を設定' },\n  { title: '完成'}\n];\n\nfunction App({ models }) {\n\n  const [ step,  setStep  ] = useState(Step.UploadImage);\n  const [ image, setImage ] = useState(null);\n  const [ image2, setImage2 ] = useState(null);\n  const [ showPrivacyPolicy, setShowPrivacyPolicy ] = useState(false);\n\n  const handelUploadImageFinish = (selectedImage) => {\n    setImage(selectedImage);\n    setStep(Step.SelectArea);\n  };\n\n  const handelSelectAreaFinish = (generatedImage) => {\n    setImage2(generatedImage);\n    setStep(Step.DownloadImage);\n  };\n\n  const handelDownloadImageFinish = () => {\n    setStep(Step.UploadImage);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        揺れる<ruby>\n          ※<rp>(</rp><rt>ちょめ</rt><rp>)</rp>\n          ※<rp>(</rp><rt>ちょめ</rt><rp>)</rp>\n        </ruby>画像ジェネレータ\n      </h1>\n      <div className=\"stepper\">\n        <Stepper steps={Steps} activeStep={step} />\n      </div>\n      <Card>\n        {[\n          <UploadImageView   models={models} onNextStep={handelUploadImageFinish} />,\n          <SelectAreaView    models={models} onNextStep={handelSelectAreaFinish}    image={image} />,\n          <DownloadImageView models={models} onNextStep={handelDownloadImageFinish} image={image2} />\n        ][step]}\n      </Card>\n      <div className=\"footer\">\n          <Button variant=\"link\" size=\"sm\" onClick={() => setShowPrivacyPolicy(true)}>\n            <FontAwesomeIcon icon={faUserShield} /> プライバシーポリシー\n          </Button>\n          <Button variant=\"link\" size=\"sm\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/sharkpp\">\n            <FontAwesomeIcon icon={faTwitter} /> @sharkpp\n          </Button>\n          <Button variant=\"link\" size=\"sm\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/sharkpp/delayedmotion/issues/new\">\n            <FontAwesomeIcon icon={faBug} /> 不具合報告\n          </Button>\n      </div>\n      <SimplePopup\n        open={showPrivacyPolicy}\n        onClose={() => setShowPrivacyPolicy(false)}\n        caption=\"プライバシーポリシー\"\n      >\n        <PrivacyPolicy />\n      </SimplePopup>\n    </div>\n  );\n}\n\nexport default App;\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nclass NetworkModel {\n\n  constructor() {\n    this._ev = new EventEmitter();\n    this._handleNetworkChange = this.handleNetworkChange.bind(this);\n    window.addEventListener('online',  this._handleNetworkChange);\n    window.addEventListener('offline', this._handleNetworkChange);\n  }\n\n  handleNetworkChange(e) {\n    //console.log('handleNetworkChange',[e,navigator.onLine]);\n    this._ev.emit(this.EventType.Change, 'online' === e.type);\n  }\n\n  on(name, listener) {\n    this._ev.on(name, listener);\n  }\n\n  off(name, listener) {\n    this._ev.removeListener(name, listener);\n  }\n\n  isOnline() {\n    return navigator.onLine;\n  }\n\n};\n\nNetworkModel.prototype.EventType = {\n  Change: 'change',\n};\n\nexport default NetworkModel;\n","\"use struct\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport NetworkModel from './models/Network';\n\nconst models = {\n  network: new NetworkModel(),\n};\n\nReactDOM.render(<App models={models} />, document.getElementById('root'));\n\n// アプリをオフラインで動作させてより速くロードしたい場合は、以下で unregister() を\n// register() に変更できます。これにはいくつかの落とし穴があります。\n// サービスワーカーの詳細: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n\n// 要求スペック\n//   config#onUpdate(registration);\n//   config#onSuccess(registration);\n// serviceWorker.register(config);\n"],"sourceRoot":""}